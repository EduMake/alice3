UserLambda =   hacerlo en orden\n\t</body/>
ThisExpression =   este
LocalDeclarationStatement =   cada </__item__/> en </array/> juntos \n\t</body/>
DoInOrder =   hacerlo en orden\n\t</body/>
ThisConstructorInvocationStatement =   este </requiredArguments/></variableArguments/></keyedArguments/>
LogicalComplement =   NEGACION </operand/>
InstanceCreation =   nuevo constructor </constructor/> </requiredArguments/></variableArguments/></keyedArguments/>
ForEachInArrayLoop =   para cada </__item__/> en </array/>\n\t</body/>\n\t lazo
DoTogether =   hacerlo juntos\n\t</body/>
NullLiteral =   deshacerLosCambiosRecientes
BooleanExpressionBodyPair =   if </expression/> es verdadero then\n\t</body/>
WhileLoop =   while </conditional/> es verdadero\n\t</body/>\n\t ciclo
CountLoop =   contar hasta </count/>\n\t</body/>\n\t ciclo
ArrayInstanceCreation =   nuevo </arrayType/> { </expressions/> }
EachInArrayTogether =   cada </__item__/> en </array/> juntos\n\t</body/>
ArrayLength =   </array/>.distancia

UserLambda =   fazer na ordem\n\t</body/>
ThisExpression =   isso
DoInOrder =   fazer na ordem\n\t</body/>
ThisConstructorInvocationStatement =   isto </requiredArguments/></variableArguments/></keyedArguments/>
LogicalComplement =   N\u00c3O </operand/>
InstanceCreation =   construir novo </constructor/> </requiredArguments/></variableArguments/></keyedArguments/>
ForEachInArrayLoop =   para cada </__item__/> em </array/>\n\t</body/>\n\t voltar
DoTogether =   fazer junto\n\t</body/>
NullLiteral =   nulo
BooleanExpressionBodyPair =   se </expression/> \u00e9 verdadeira ent\u00e3o\n\t</body/>
ReturnStatement =   retornar </expression/>
WhileLoop =   enquanto </conditional/> for verdade\n\t</body/>\n\t loop
CountLoop =   contador de </count/>\n\t</body/>\n\t loop
ArrayInstanceCreation =   novo </arrayType/> { </expressions/> }
EachInArrayTogether =   todos </__item__/> em </array/> juntos\n\t</body/>
MethodInvocation =   </express\u00e3o/> </m\u00e9todo/> </requiredArguments/></Argumentos da vari\u00e1vel/></keyedArguments/>
ArrayLength =   </array/>.comprimento
ConditionalStatement =   </booleanExpressionBodyPairs/>\nsen\u00e3o\n\t</elseBody/>

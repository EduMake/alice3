DeclarationLikeSubstanceComposite.valueComponentTypeState.sidekickLabel = value type:
DeclarationLikeSubstanceComposite.valueIsArrayTypeState = is array
DeclarationLikeSubstanceComposite.nameState.sidekickLabel = name:
DeclarationLikeSubstanceComposite.initializerState.sidekickLabel = initializer:
DeclarationLikeSubstanceComposite.isNotAvailable = </name/> is not available
DeclarationLikeSubstanceComposite.isNotAValidName = </name/> is not a valid name
DeclarationLikeSubstanceComposite.isNotValid = </name/> is not a valid </type/>
DeclarationLikeSubstanceComposite.mustBeSet = </type/> must be set

InsertEachInArrayComposite.valueComponentTypeState.sidekickLabel = item type:
InsertEachInArrayComposite.nameState.sidekickLabel = item name:
InsertEachInArrayComposite.initializerState.sidekickLabel = array:
InsertForEachInArrayLoopComposite = Insert For Each In Array Loop...
InsertEachInArrayTogetherComposite = Insert Each In Array Together...

InsertLocalDeclarationStatementComposite = Insert Variable...

AddParameterComposite = Add Parameter...

AddFunctionComposite = Add </declaringType/> Function...
AddFunctionComposite.valueComponentTypeState.sidekickLabel = return type:

AddProcedureComposite = Add </declaringType/> Procedure...

AddUnmanagedFieldComposite = Add </declaringType/> Property...

InitialPropertyValuesToolPaletteCoreComposite = initial property values


DeclarationLikeSubstanceComposite.isFinalState.sidekickLabel = is variable:
InsertLocalDeclarationStatementComposite.isFinalState.true = constant
InsertLocalDeclarationStatementComposite.isFinalState.false = variable
FieldComposite.isFinalState.true = constant field
FieldComposite.isFinalState.false = variable field


AbstractConstructor = </getDeclaringType()/>
AbstractDeclaration = </getName()/>
AbstractValueLiteral = </value/>
Argument = </getParameterNameText()/></expression/>
ArrayAccess = </array/>[ </index/> ]
ArrayInstanceCreation = </arrayType/> { </expressions/> }
ArrayLength = </array/>\u7684\u957f\u5ea6
AssignmentExpression = </leftHandSide/> </_gets_toward_leading_/> </rightHandSide/>
BlockStatement = </statements/>
BooleanExpressionBodyPair = \u5982\u679c</expression/>\u4e3a\u771f\u65f6\n</body/>
Comment = // </text/>
ConditionalStatement = </booleanExpressionBodyPairs/>\n\u5426\u5219\n\t</elseBody/>
ConstructorBlockStatement = </constructorInvocationStatement/> \n </statements/>
CountLoop = \u4ece</count/>\u5230</body/>\uff0c\u5faa\u73af\u8ba1\u6570
DoInOrder = \u6309\u987a\u5e8f\u6267\u884c
DoTogether = do together\n\t</body/>
EachInArrayTogether = each </__item__/> in </array/> together\n\t</body/>
ExpressionStatement = </expression/>
FieldAccess = </expression/> </field/>
ForEachInArrayLoop = \u5bf9\u4e8e</array/>\u4e2d\u7684\u6bcf\u4e2a</__item__/>\n</body/>\n\u5faa\u73af
InfixExpression = </leftOperand/> </operator/> </rightOperand/>
InstanceCreation = \u65b0\u7684</constructor/></requiredArguments/></variableArguments/></keyedArguments/>
LambdaExpression = </value/>
LocalAccess = </local/>
LocalDeclarationStatement = </__local__/></_gets_toward_leading_/></initializer/>
LogicalComplement = \u4e0d\u662f</operand/>
MethodInvocation = </expression/> </method/> </requiredArguments/> </variableArguments/> </keyedArguments/>
NullLiteral = \u8d77\u8eab
ParameterAccess = </parameter/>
ResourceExpression = </resource/>
ReturnStatement = \u8fd4\u56de </expression/>
StringConcatenation = </leftOperand/> + </rightOperand/>
StringLiteral = \u201c</value/>\u201d
SuperConstructorInvocationStatement = \u7236\u7c7b </requiredArguments/> </variableArguments/> </keyedArguments/>
SuperExpression = \u7236\u7c7b
ThisConstructorInvocationStatement = \u8fd9\u4e2a\u4eba </requiredArguments/> </variableArguments/> </keyedArguments/>
ThisExpression = \u8fd9\u4e2a\u4eba
UserLambda = \u6309\u987a\u5e8f\u6267\u884c
UserLocal = </getValidName()/>
WhileLoop = \u5f53\u6761\u4ef6</conditional/>\u4e3a\u771f\u65f6\n</body/>\n\u5faa\u73af

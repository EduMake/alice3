AbstractDeclaration=</getName()/>
AbstractConstructor=</getDeclaringType()/>
UserLocal=</getValidName()/>
UserLambda=s\u0131ral\u0131 yap\n\t</body/>
ExpressionStatement=</expression/>
BlockStatement=</statements/>
ConstructorBlockStatement=</constructorInvocationStatement/>\n</statements/>
WhileLoop=</conditional/> do\u011Fru iken\n\t</body/>\n\t d\u00F6ng\u00FC
ForEachInArrayLoop=her bir </__item__/> i\u00E7in </array/> i\u00E7indeki\n\t</body/>\n\t d\u00F6ng\u00FC
CountLoop=\ </count/> kadar say\n\t</body/>\n\t d\u00F6ng\u00FC
BooleanExpressionBodyPair=e\u011Fer </expression/> do\u011Fru ise \n\t</body/>
ConditionalStatement=</booleanExpressionBodyPairs/>\nde\u011Filse\n\t</elseBody/>
DoTogether=birlikte yap\n\t</body/>
DoInOrder=s\u0131ral\u0131 yap\n\t</body/>
LocalDeclarationStatement=</__local__/> </_gets_toward_leading_/> </initializer/>
Comment=// </text/>
EachInArrayTogether=her bir </__item__/> birlikte </array/> i\u00E7indeki\n\t</body/>
ReturnStatement=geriD\u00F6n </expression/>
SuperConstructorInvocationStatement=s\u00FCper </requiredArguments/></variableArguments/></keyedArguments/>
ThisConstructorInvocationStatement=bu </requiredArguments/></variableArguments/></keyedArguments/>
AbstractValueLiteral=</value/>
StringLiteral="</value/>"
NullLiteral=tan\u0131mlanmam\u0131\u015F
ThisExpression=bu
SuperExpression=s\u00FCper
MethodInvocation=</expression/> </method/> </requiredArguments/></variableArguments/></keyedArguments/>
FieldAccess=</expression/> </field/>
LocalAccess=</local/>
ParameterAccess=</parameter/>
ArrayAccess=</array/>[ </index/> ]
ArrayLength=</array/>.uzunluk
AssignmentExpression=</leftHandSide/> </_gets_toward_leading_/> </rightHandSide/>
InfixExpression=</leftOperand/> </operator/> </rightOperand/>
LogicalComplement=DE\u011E\u0130L </operand/>
InstanceCreation=yeni </constructor/> </requiredArguments/></variableArguments/></keyedArguments/>
ArrayInstanceCreation=yeni </arrayType/> { </expressions/> }
StringConcatenation=</leftOperand/> + </rightOperand/>
ResourceExpression=</resource/>
LambdaExpression=</value/>
Argument=</getParameterNameText()/></expression/>

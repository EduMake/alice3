<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE codetemplates PUBLIC "-//NetBeans//DTD Editor Code Templates settings 1.0//EN" "http://www.netbeans.org/dtds/EditorCodeTemplates-1_0.dtd">
<codetemplates>
	<codetemplate abbreviation="countdown" xml:space="preserve">
        <code><![CDATA[for (int i = count; i > 0; i--){

}]]></code>
    </codetemplate>
	<codetemplate abbreviation="dotogether6" xml:space="preserve">
        <code><![CDATA[doTogether(

   new Runnable()  {
      public void run() {
        //statement(s)
      }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }} ,
   new Runnable() {
       public void run() {
         //statement(s)
       }}
    );]]></code>
    </codetemplate>
	<codetemplate abbreviation="countup" xml:space="preserve">
        <code><![CDATA[for (int i = 0; i < count; i++) {
    //statement(s)
}]]></code>
    </codetemplate>
	<codetemplate abbreviation="newthread" xml:space="preserve">
        <code><![CDATA[     ,
     new Thread() {
       public void run() {
         //statement(s)
       }} ]]></code>
    </codetemplate>
	<codetemplate abbreviation="dotogether5" xml:space="preserve">
        <code><![CDATA[doTogether(

   new Runnable()  {
      public void run() {
        //statement(s)
      }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }}
    );]]></code>
    </codetemplate>
	<codetemplate abbreviation="jaxbm" xml:space="preserve">
        <code><![CDATA[try {
                javax.xml.bind.JAXBContext jaxbCtx= javax.xml.bind.JAXBContext.newInstance( ${OBJ2M instanceof="java.lang.Object" default="obj2BMarshalled"}.getClass().getPackage().getName());
                javax.xml.bind.Marshaller marshaller = jaxbCtx.createMarshaller();
                marshaller.setProperty(javax.xml.bind.Marshaller.JAXB_ENCODING, "UTF-8"); //NOI18N
                marshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
                marshaller.marshal(${OBJ2M} , System.out);
            } catch (javax.xml.bind.JAXBException ex) {
                // XXXTODO Handle exception
                java.util.logging.Logger.getLogger("global").log(java.util.logging.Level.SEVERE, null, ex); //NOI18N
        }]]></code>
        <description><![CDATA[Sample template to marshal JAXB objects.]]></description>
    </codetemplate>
	<codetemplate abbreviation="foreachtogether" xml:space="preserve">
        <code><![CDATA[ eachInTogether(new EachInTogetherRunnable<ClassName>() {
            public void run(final ClassName m) {
               //m.methodName()  statement(s)
            }
        }, new ClassName[]{object1, object2, object3});]]></code>
    </codetemplate>
	<codetemplate abbreviation="mouseclick" xml:space="preserve">
        <code><![CDATA[objectName.addMouseButtonListener(new MouseButtonListener() {
    public void mouseButtonClicked(MouseButtonEvent e) {
               //statements go here
        }
 });]]></code>
    </codetemplate>
	<codetemplate abbreviation="keyboard" xml:space="preserve">
        <code><![CDATA[objectName.addKeyListener(new KeyListener() {
    public void keyPressed(keyEvent e) {
               //statements go here
        }
 });]]></code>
    </codetemplate>
	<codetemplate abbreviation="dotogether3" xml:space="preserve">
        <code><![CDATA[doTogether(

   new Runnable()  {
      public void run() {
        //statement(s)
      }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }}
    );]]></code>
    </codetemplate>
	<codetemplate abbreviation="dotogether" xml:space="preserve">
        <code><![CDATA[doTogether(

   new Runnable()  {
      public void run() {
        //statement(s)
      }},
   new Runnable() {
       public void run() {
         //statement(s)
       }}
    );]]></code>
    </codetemplate>
	<codetemplate abbreviation="dotogether4" xml:space="preserve">
        <code><![CDATA[doTogether(

   new Runnable()  {
      public void run() {
        //statement(s)
      }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }},
   new Runnable() {
       public void run() {
         //statement(s)
       }}
    );]]></code>
    </codetemplate>
	<codetemplate abbreviation="jaxbu" xml:space="preserve">
        <code><![CDATA[
            try {
                javax.xml.bind.JAXBContext jaxbCtx = javax.xml.bind.JAXBContext.newInstance(${UM_OBJ instanceof="java.lang.Object" default="umObj"}.getClass().getPackage().getName());
                javax.xml.bind.Unmarshaller unmarshaller = jaxbCtx.createUnmarshaller();
                ${UM_OBJ} = ${TYPE_CAST cast default=""} unmarshaller.unmarshal(new java.io.File("File path")); //NOI18N
            } catch (javax.xml.bind.JAXBException ex) {
                // XXXTODO Handle exception
                java.util.logging.Logger.getLogger("global").log(java.util.logging.Level.SEVERE, null, ex); //NOI18N
            }
        ]]></code>
        <description><![CDATA[Sample template to unmarshal JAXB objects.]]></description>
    </codetemplate>
</codetemplates>

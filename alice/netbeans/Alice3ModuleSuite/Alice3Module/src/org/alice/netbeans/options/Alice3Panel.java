/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.alice.netbeans.options;

import java.util.prefs.Preferences;

final class Alice3Panel extends javax.swing.JPanel {

	private final Alice3OptionsPanelController controller;

	Alice3Panel(Alice3OptionsPanelController controller) {
		this.controller = controller;
		initComponents();
		// TODO listen to changes in form fields and call controller.changed()
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCollapseImportsCheckBox = new javax.swing.JCheckBox();
        jCollapseBoilerPlateMethodsCheckBox = new javax.swing.JCheckBox();

        jCollapseImportsCheckBox.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCollapseImportsCheckBox, org.openide.util.NbBundle.getMessage(Alice3Panel.class, "Alice3Panel.jCollapseImportsCheckBox.text")); // NOI18N

        jCollapseBoilerPlateMethodsCheckBox.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCollapseBoilerPlateMethodsCheckBox, org.openide.util.NbBundle.getMessage(Alice3Panel.class, "Alice3Panel.jCollapseBoilerPlateMethodsCheckBox.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCollapseImportsCheckBox)
                    .addComponent(jCollapseBoilerPlateMethodsCheckBox))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jCollapseImportsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCollapseBoilerPlateMethodsCheckBox)
                .addGap(0, 22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	void load() {
		Preferences preferences = Preferences.userNodeForPackage(Alice3Panel.class);
		this.jCollapseImportsCheckBox.setSelected(preferences.getBoolean(Alice3OptionsPanelController.COLLAPSE_IMPORTS_KEY, true));
		this.jCollapseBoilerPlateMethodsCheckBox.setSelected(preferences.getBoolean(Alice3OptionsPanelController.COLLAPSE_BOILER_PLATE_METHODS_KEY, true));
	}

	void store() {
		Preferences preferences = Preferences.userNodeForPackage(Alice3Panel.class);
		preferences.putBoolean(Alice3OptionsPanelController.COLLAPSE_IMPORTS_KEY, this.jCollapseImportsCheckBox.isSelected());
		preferences.putBoolean(Alice3OptionsPanelController.COLLAPSE_BOILER_PLATE_METHODS_KEY, this.jCollapseBoilerPlateMethodsCheckBox.isSelected());
	}

	boolean valid() {
		// TODO check whether form is consistent and complete
		return true;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCollapseBoilerPlateMethodsCheckBox;
    private javax.swing.JCheckBox jCollapseImportsCheckBox;
    // End of variables declaration//GEN-END:variables
}
